version: '3'

services:
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      NODE_ENV: development
      MONGO_URI: ${MONGO_URI:-mongodb://mongodb:27017/e-gov}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@egov.lk}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-Admin@123}
      CREATE_TEST_USERS: ${CREATE_TEST_USERS:-true}
      TEST_USER_PASSWORD: ${TEST_USER_PASSWORD:-Citizen@123}
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Development mode frontends
  citizen_frontend_dev:
    image: node:18-alpine
    command: sh -c "cd /app && npm install && cd apps/citizen_app && npm run dev"
    ports:
      - "3001:3001"
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend

  department_frontend_dev:
    image: node:18-alpine
    command: sh -c "cd /app && npm install && cd apps/department_app && npm run dev"
    ports:
      - "3002:3002"
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      - PORT=3002
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend

  admin_frontend_dev:
    image: node:18-alpine
    command: sh -c "cd /app && npm install && cd apps/admin_app && npm run dev"
    ports:
      - "3003:3003"
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      - PORT=3003
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend

volumes:
  mongodb_data:
    driver: local
